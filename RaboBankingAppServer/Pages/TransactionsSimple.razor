@page "/transactions/list3/"
@using Microsoft.EntityFrameworkCore;
@using RaboBankingAppServer.Entities;
@inject IDbContextFactory<DataContext> ContextFactory
@inject NavigationManager NavigationManager

<PageTitle>TransactionsOverview</PageTitle>

<h1>TransactionsOverview</h1>

@if (Transactions is null)
{
    <div>Loading...</div>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Account</th>
                <th>Amount</th>
                <th>Date</th>
                @*               <th>Category</th>
            <th>Carbon Foot Print</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in Transactions)
            {
                <tr>
                    @if (transaction.IncomingTransaction == true)
                    {
                        <td>@transaction.FromAccount.Name</td>
                    }
                    else
                    {
                        <td>@transaction.ToAccount.Name</td>
                    }
                    <td>@transaction.Amount</td>
                    <td>@transaction.Date</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int? CurrentPage { get; set; }
    private List<Transaction>? Transactions { get; set; }
    private int TotalPages { get; set; }
    private const int ItemsPerPage = 4;
    protected override async Task OnParametersSetAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        using var context = ContextFactory.CreateDbContext();

        Transactions = await context.Transactions
            .Include(t => t.FromAccount)
            .Include(t => t.ToAccount)
            .OrderBy(t => t.Date)
            .Take(ItemsPerPage)
            .ToListAsync();
    }
}
